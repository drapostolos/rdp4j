// https://medium.com/viascom/complete-guide-publish-with-gradle-to-maven-central-native-7b128addbb6
// https://github.com/researchgate/gradle-release
plugins {
    id "maven-publish"
    id "signing"
    id "java-library"
    id 'net.researchgate.release' version '3.0.2'
    id 'jacoco'
}

java {
    withJavadocJar()
    withSourcesJar()
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

sourceCompatibility = 1.11
group = 'com.github.drapostolos'
archivesBaseName = 'rdp4j'

repositories {
    mavenCentral()
}

dependencies { 
    implementation 'org.slf4j:slf4j-api:1.7.21'
    testImplementation 'org.slf4j:slf4j-simple:1.7.21'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation 'org.powermock:powermock-core:2.0.9'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    testImplementation 'org.powermock:powermock-reflect:2.0.9'
    testImplementation 'org.assertj:assertj-core:3.23.1'
}

test {
    jvmArgs ["--add-opens java.base/java.lang=ALL-UNNAMED"]
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled = true
        html.required = true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

publishing {
    repositories {
        maven {
            def releaseRepo = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotRepo = "https://oss.sonatype.org/content/repositories/snapshots/"
            
            name = "OSSRH"
            url = isReleaseVersion ? releaseRepo : snapshotRepo
            
            credentials {
                username = findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java
            
            pom {
                groupId = 'com.github.drapostolos'
                name = 'RDP4J'
                description = 'This library provides a Java SPI for polling directories on a REMOTE filesystem.'
                url = 'https://github.com/drapostolos/rdp4j'
                packaging = 'jar'

                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'http://opensource.org/licenses/MIT'
                    }
                }

                scm {
                    url = 'https://github.com/drapostolos/rdp4j'
                    connection = 'scm:git://github.com:drapostolos/rdp4j.git'
                    developerConnection = 'scm:git://github.com:drapostolos/rdp4j.git'
                }

                developers {
                    developer {
                        id = 'drapostolos'
                        name = 'Alexander Poulikakos'
                        email = 'github@labelscans.com'
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}

release {
    tagTemplate = '$name-$version'

    git {
        requireBranch.set('master')
    }
}
afterReleaseBuild.dependsOn publish
